<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><category term="golang" label="r/golang"/><updated>2019-05-13T06:06:21+00:00</updated><icon>https://www.redditstatic.com/icon.png/</icon><id>/r/golang/comments/bnu47l/.rss</id><link rel="self" href="https://www.reddit.com/r/golang/comments/bnu47l/.rss" type="application/atom+xml" /><link rel="alternate" href="https://www.reddit.com/r/golang/comments/bnu47l/" type="text/html" /><logo>https://b.thumbs.redditmedia.com/7BDtSXbohQaPFuaa6oCA5HtE53Flgld6rj3G7-TavDs.png</logo><subtitle>Gophers of the world unite!</subtitle><title>High Performance DICOM Medical Image Parser in Golang : golang</title><entry><author><name>/u/suyashkumar</name><uri>https://www.reddit.com/user/suyashkumar</uri></author><category term="golang" label="r/golang"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/suyashkumar&quot;&gt; /u/suyashkumar &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://github.com/suyashkumar/dicom&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_bnu47l</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/" /><updated>2019-05-12T21:00:57+00:00</updated><title>High Performance DICOM Medical Image Parser in Golang</title></entry><entry><author><name>/u/angry_unicorn</name><uri>https://www.reddit.com/user/angry_unicorn</uri></author><category term="golang" label="r/golang" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Amazing work! Original author of go-dicom here — I’m really happy to see this project thrive like this and I’m glad to see it being forked since I don’t have time to maintain it and I don’t work in the medical software business :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_en9hp6h</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/en9hp6h/"/><updated>2019-05-12T22:52:54+00:00</updated><title>/u/angry_unicorn on High Performance DICOM Medical Image Parser in Golang</title></entry><entry><author><name>/u/suyashkumar</name><uri>https://www.reddit.com/user/suyashkumar</uri></author><category term="golang" label="r/golang" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;&lt;a href=&quot;/u/angry_unicorn&quot;&gt;/u/angry_unicorn&lt;/a&gt; thank you! Your foundational work was essential and an incredible feat to get dicom parsing working (it&amp;#39;s quite a spec). I&amp;#39;m excited to keep building on it and adding these additional features! Would welcome any advice, comments, or contributions :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_ena188x</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/ena188x/"/><updated>2019-05-13T01:48:50+00:00</updated><title>/u/suyashkumar on High Performance DICOM Medical Image Parser in Golang</title></entry><entry><author><name>/u/printf_hello_world</name><uri>https://www.reddit.com/user/printf_hello_world</uri></author><category term="golang" label="r/golang" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;blockquote&gt; &lt;p&gt;it&amp;#39;s quite a spec&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;You can say that again. Sorry for my laziness, but without reading your code: do you do anything about Module validation?&lt;/p&gt; &lt;p&gt;I&amp;#39;ve always found that to be the biggest challenge: keeping track of the behemoth, nearly-identical-but-subtly-different layouts of tags. That and supporting ISO-2022 encodings.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_ena6h38</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/ena6h38/"/><updated>2019-05-13T02:35:14+00:00</updated><title>/u/printf_hello_world on High Performance DICOM Medical Image Parser in Golang</title></entry><entry><author><name>/u/suyashkumar</name><uri>https://www.reddit.com/user/suyashkumar</uri></author><category term="golang" label="r/golang" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Ah ha. Right now the parser parses out generic `Element`s, that include tag, value representation, and the value. It would be nice to package the content of an element into a native Golang struct that better represents the specific tag though. &lt;/p&gt; &lt;p&gt;To that end, I built another project while I was at Gradient Health that may be of interest: &lt;a href=&quot;https://github.com/gradienthealth/dicom-protos&quot;&gt;https://github.com/gradienthealth/dicom-protos&lt;/a&gt; it generates protocol buffer representations for every tag in the DICOM spec! &lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;At some point I&amp;#39;d like to potentially use the above to autogenerate Golang structs that the parser can hydrate :).&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_enaqfwz</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/enaqfwz/"/><updated>2019-05-13T05:44:14+00:00</updated><title>/u/suyashkumar on High Performance DICOM Medical Image Parser in Golang</title></entry><entry><author><name>/u/mokbel</name><uri>https://www.reddit.com/user/mokbel</uri></author><category term="golang" label="r/golang" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Thanks for your work on go-dicom. DICOM is a beast and your work was enough to parse pixel data. Wound up doing most of the other work with pydicom or DCMTK.&lt;/p&gt; &lt;p&gt;I&amp;#39;m also not in medical software... But I got curious.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_en9kjpa</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/en9kjpa/"/><updated>2019-05-12T23:19:10+00:00</updated><title>/u/mokbel on High Performance DICOM Medical Image Parser in Golang</title></entry><entry><author><name>/u/DocMerlin</name><uri>https://www.reddit.com/user/DocMerlin</uri></author><category term="golang" label="r/golang" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;WOOO! Now it will be easier to 3d print my brain!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_ena7ra4</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/ena7ra4/"/><updated>2019-05-13T02:45:33+00:00</updated><title>/u/DocMerlin on High Performance DICOM Medical Image Parser in Golang</title></entry><entry><author><name>/u/laggySteel</name><uri>https://www.reddit.com/user/laggySteel</uri></author><category term="golang" label="r/golang" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;wow Go is picking up. hope we also build a Python (pip) like community&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_enadn4q</id><link href="https://www.reddit.com/r/golang/comments/bnu47l/high_performance_dicom_medical_image_parser_in/enadn4q/"/><updated>2019-05-13T03:33:24+00:00</updated><title>/u/laggySteel on High Performance DICOM Medical Image Parser in Golang</title></entry></feed>